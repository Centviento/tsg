package com.brdm.common;

import java.util.Locale;
import java.util.Map;

import com.liferay.portal.kernel.util.LocaleUtil;

/**
 * лаЛЎла┬╗ла┬░лАлЃлАлЃ лаЛЌлАлѓла┬хламЉлалЁла┬░ла┬илалЁла┬░лАРђАла┬хлалЁ лаЛЉлАлЃлаЛћла┬╗лАлІлАРђАлаЛЉлАРђџла┬хла┬╗лАлілалЁлаЛЋ ламЉла┬╗лАлЈ лаЛЌлАлѓла┬хламЉлаЛЋлАлЃлАРђџла┬░лалєла┬╗ла┬хлалЁлаЛЉлАлЈ лАЛЊлАРђџлаЛЉла┬╗лаЛЉлАРђџ-лАлЃлАРђџла┬░лАРђџлаЛЉлАРђАла┬хлАлЃлаЛћлаЛЉлАРђд
 * лаЛ?ла┬хлАРђџлаЛЋламЉлаЛЋлалє. лаЛюла┬х лалЁла┬░ламЉлаЛЋ лАлѓла┬░лАлЃлАРѓглаЛЉлАлѓлАлЈлАРђџлАлі лАлїлАРђџлаЛЋлАРђџ лаЛћла┬╗ла┬░лАлЃлАлЃ лаЛЉла┬╗лаЛЉ лАлЃлаЛЋла┬иламЉла┬░лалєла┬░лАРђџлАлі ла┬хлаЛќлаЛЋ лАлїлаЛћла┬ила┬хлаЛ?лаЛЌла┬╗лАлЈлАлѓлАРђ╣.
 * 
 * @author Sergey Simonenko
 */
public final class Utils {

	/**
	 * лаРђюла┬хлалЁла┬хлАлѓлаЛЉлАлѓлАЛЊла┬хлАРђџла┬хлАРђџ лаЛ?ла┬░лАлЃлаЛћлАЛЊ лаЛЌлаЛЋлаЛЉлАлЃлаЛћла┬░ ламЉла┬╗лАлЈ лаЛЋлаЛЌла┬хлАлѓла┬░лАРђџлаЛЋлАлѓла┬░ like. лаЛЪлАлѓлаЛЉ лаЛЌлаЛЋлаЛЉлАлЃлаЛћла┬х ла┬▒лАЛЊламЉлАЛЊлАРђџ
	 * лалЁла┬░лАРђдлаЛЋламЉлаЛЉлАРђџлАлілАлЃлАлЈ лалєлАлЃла┬х лАлїла┬╗ла┬хлаЛ?ла┬хлалЁлАРђџлАРђ╣, лалЁла┬░лАРђАла┬░ла┬╗лаЛЋ лаЛћлаЛЋлАРђџлаЛЋлАлѓлАРђ╣лАРђд лАлЃлаЛЋлалєлаЛЌла┬░ламЉла┬░ла┬хлАРђџ лАлЃ лаЛ?ла┬░лАлЃлаЛћлаЛЋлаРёќ. лаРђЮла┬╗лАлЈ 
	 * лаЛ?лАЛЊла┬╗лАлілАРђџлаЛЉлАлЈла┬илАРђ╣лАРђАлалЁлАРђ╣лАРђд лаЛЌлаЛЋла┬╗ла┬хлаРёќ лаЛЌлаЛЋлаЛЉлАлЃлаЛћ лалєла┬хламЉлАРђ?лАРђџлАлЃлАлЈ лАлЃлАлѓла┬░ла┬илАЛЊ лаЛЌлаЛЋ лалєлАлЃла┬хлаЛ? лАлЈла┬илАРђ╣лаЛћла┬░лаЛ?.
	 * 
	 * @param source лаРђЎлАРђдлаЛЋламЉлАлЈлАРђ░ла┬░лАлЈ лАлЃлАРђџлАлѓлаЛЋлаЛћла┬░.
	 * @param multilanguage лаРђЮлаЛЋла┬╗ла┬Хла┬хлалЁ ла┬▒лАРђ╣лАРђџлАлі true, ла┬хлАлЃла┬╗лаЛЉ лаЛЌлаЛЋлаЛЉлАлЃлаЛћ лалєла┬хламЉлАРђ?лАРђџлАлЃлАлЈ лаЛЌлаЛЋ 
	 * лаЛ?лАЛЊла┬╗лАлілАРђџлаЛЉлАлЈла┬илАРђ╣лАРђАлалЁлАРђ╣лаЛ? лаЛЌлаЛЋла┬╗лАлЈлаЛ?.
	 * 
	 * @return лаРђЎлаЛЋла┬илалєлАлѓла┬░лАРђ░ла┬░ла┬хлАРђџ лаЛ?ла┬░лАлЃлаЛћлАЛЊ лаЛЌлаЛЋлаЛЉлАлЃлаЛћла┬░.
	 * 
	 * @author Sergey Simonenko
	 */
	public static String getStartsWithMask(
			String source, boolean multilanguage) {
		String result = getFiltered(source);
		if (multilanguage) {
			result = "%>" + result;
		}
		result = result + "%";
		return result;
	}
	
	/**
	 * лаРђюла┬хлалЁла┬хлАлѓлаЛЉлАлѓлАЛЊла┬хлАРђџ лаЛ?ла┬░лАлЃлаЛћлАЛЊ лаЛЌлаЛЋлаЛЉлАлЃлаЛћла┬░ ламЉла┬╗лАлЈ лаЛЋлаЛЌла┬хлАлѓла┬░лАРђџлаЛЋлАлѓла┬░ like ламЉла┬╗лАлЈ лаЛ?лАЛЊла┬╗лАлілАРђџлаЛЉлАлЈла┬илАРђ╣лАРђАлалЁлАРђ╣лАРђд лаЛЌлаЛЋла┬╗ла┬хлаРёќ, 
	 * лаЛћлаЛЋлАРђџлаЛЋлАлѓла┬░лАлЈ лаЛЌлаЛЋла┬илалєлаЛЋла┬╗лАлЈла┬хлАРђџ лаЛЉлАлЃлаЛћла┬░лАРђџлАлі лАРђџлаЛЋлАРђАлалЁлаЛЋла┬х лАлЃлаЛЋлалєлаЛЌла┬░ламЉла┬хлалЁлаЛЉла┬х лАлЃлАРђџлАлѓлаЛЋлаЛћлаЛЉ лалЁла┬░ лалЁла┬хлаЛћлаЛЋлАРђџлаЛЋлАлѓлаЛЋлаЛ? 
	 * (лаЛЋламЉлалЁлаЛЋлаЛ? лаЛћлаЛЋлалЁлаЛћлАлѓла┬хлАРђџлалЁлаЛЋлаЛ?) лАлЈла┬илАРђ╣лаЛћла┬х.
	 * 
	 * @param source ла№┐йлАлЃлАРђдлаЛЋламЉлалЁла┬░лАлЈ лАлЃлАРђџлАлѓлаЛЋлаЛћла┬░.
	 * @return лаРђЎлаЛЋла┬илалєлАлѓла┬░лАРђ░ла┬░ла┬хлАРђџ лаЛ?ла┬░лАлЃлаЛћлАЛЊ лаЛЌлаЛЋлаЛЉлАлЃлаЛћла┬░.
	 * 
	 * @author Sergey Simonenko
	 */
	public static String getExactMask(String source) {
		String result = getFiltered(source); 
		result = "%>" + source + "<%";
		return result;
	}
	
	/**
	 * ла┬цлаЛЉла┬╗лАлілАРђџлАлѓлАЛЊла┬хлАРђџ ла┬ила┬░лаЛЌлАлѓла┬хлАРђ░лАРђ?лалЁлалЁлАРђ╣ла┬х лАлЃлаЛЉлаЛ?лалєлаЛЋла┬╗лАРђ╣ лаЛ?ла┬░лАлЃлаЛћлаЛЉ лаЛЌлаЛЋлаЛЉлАлЃлаЛћла┬░.
	 * 
	 * @param source ла№┐йлАлЃлАРђдлаЛЋламЉлалЁла┬░лАлЈ лАлЃлАРђџлАлѓлаЛЋлаЛћла┬░.
	 * @return лаРђЎлаЛЋла┬илалєлАлѓла┬░лАРђ░ла┬░ла┬хлАРђџ лАлЃлАРђџлАлѓлаЛЋлаЛћлАЛЊ, лаЛЉла┬и лаЛћлаЛЋлАРђџлаЛЋлАлѓлаЛЋлаРёќ лаЛЋлАРђџла┬▒лАлѓлаЛЋлАРѓгла┬хлалЁлАРђ╣ ла┬ила┬░лаЛЌлАлѓла┬хлАРђ░лАРђ?лалЁлалЁлАРђ╣ла┬х лАлЃлаЛЉлаЛ?лалєлаЛЋла┬╗лАРђ╣.
	 * 
	 * @author Sergey Simonenko
	 */
	public static String getFiltered(String source) {
		String result = source.replaceAll("[%_<>]", "");
		return result;
	}
	
	/**
	 * @param nameMap лаЛџлАЛЊла┬╗лАлілАРђџлаЛЉлАлЈла┬илАРђ╣лАРђАлалЁла┬░лАлЈ лаЛћла┬░лАлѓлАРђџла┬░ лАлЃлАРђџлАлѓлаЛЋлаЛћ.
	 * @return лаРђЎлаЛЋла┬илалєлАлѓла┬░лАРђ░ла┬░ла┬хлАРђџ лАлЃлАРђџлАлѓлаЛЋлаЛћлАЛЊ ламЉла┬╗лАлЈ лаЛЌлАлѓла┬хламЉлаЛЌлаЛЋлАРђАлАРђџлаЛЉлАРђџла┬хла┬╗лАлілалЁлаЛЋлаРёќ ла┬╗лаЛЋлаЛћла┬░ла┬╗лаЛЉ лаЛЌлаЛЋла┬╗лАліла┬илаЛЋлалєла┬░лАРђџла┬хла┬╗лАлЈ.
	 * 
	 * @author Sergey Simonenko
	 */
	public static String getLocalized(
			Map<Locale, String> nameMap, Locale userLocale) {
		String result = null;
		if (nameMap != null) {
			if (userLocale != null) {
				result = nameMap.get(userLocale);
				if (result != null && !result.equals("")) {
					return result;
				}
			}
			Locale defaultLocale = LocaleUtil.getDefault();
			if (defaultLocale != null) {
				result = nameMap.get(defaultLocale);
				if (result != null && !result.equals("")) {
					return result;
				}	
			}
			for (String value : nameMap.values()) {
				if (!value.equals("")) {
					return value;
				}
			}
		}
		if (result == null) {
			result = "";
		}
		return result;
	}
	
	/**
	 * лаРђћла┬░лаЛћлАлѓлАРђ╣лАРђџлАРђ╣лаРёќ лаЛћлаЛЋлалЁлАлЃлАРђџлАлѓлАЛЊлаЛћлАРђџлаЛЋлАлѓ, лаЛЌлАлѓла┬хлаЛЌлАлЈлАРђџлАлЃлАРђџлалєлАЛЊла┬хлАРђџ лАлЃлаЛЋла┬иламЉла┬░лалЁлаЛЉлАлІ лАлїлаЛћла┬ила┬хлаЛ?лаЛЌла┬╗лАлЈлАлѓлаЛЋлалє лаЛћла┬╗ла┬░лАлЃлАлЃла┬░.
	 */
	private Utils() {}
}
